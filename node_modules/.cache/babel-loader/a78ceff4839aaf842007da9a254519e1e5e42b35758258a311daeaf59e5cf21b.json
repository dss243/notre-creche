{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Soundous\\\\Desktop\\\\react-website-v1-master\\\\src\\\\components\\\\Cards.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Cards.css';\nimport CardItem from './CardItem';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cards() {\n  _s();\n  const [activities, setActivities] = useState([]); // Initialize an empty array to store activities\n  const [loading, setLoading] = useState(true); // Initialize a loading state\n  const [error, setError] = useState(null); // Initialize an error state\n\n  useEffect(() => {\n    // Define a function to fetch activities\n    const fetchActivities = async () => {\n      try {\n        const response = await axios.get('/getActivities'); // Make API call to fetch activities\n        setActivities(response.data); // Update the state with the fetched activities\n        setLoading(false); // Set the loading state to false\n      } catch (error) {\n        console.error(error);\n        setError('Error fetching data'); // Set a generic error message\n        setLoading(false); // Set the loading state to false\n      }\n    };\n\n    // Call the fetchActivities function when the component mounts\n    fetchActivities();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this); // Display a loading message while the data is being fetched\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this); // Display an error message if the API call fails\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Explorez nos activit\\xE9s.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards__wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"cards__items\",\n          children: activities.map(activity => /*#__PURE__*/_jsxDEV(CardItem, {\n            src: activity.imageLink // Fix: use imageLink instead of image\n            ,\n            text: activity.description,\n            label: activity.label,\n            date: activity.date,\n            startTime: activity.startTime,\n            endTime: activity.endTime\n          }, activity.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Cards, \"QUo/oLkcOdllJU1Xvu036Y1MawY=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useState","useEffect","CardItem","axios","jsxDEV","_jsxDEV","Cards","_s","activities","setActivities","loading","setLoading","error","setError","fetchActivities","response","get","data","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","activity","src","imageLink","text","description","label","date","startTime","endTime","id","_c","$RefreshReg$"],"sources":["C:/Users/Soundous/Desktop/react-website-v1-master/src/components/Cards.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Cards.css';\nimport CardItem from './CardItem';\nimport axios from 'axios';\n\nfunction Cards() {\n  const [activities, setActivities] = useState([]); // Initialize an empty array to store activities\n  const [loading, setLoading] = useState(true); // Initialize a loading state\n  const [error, setError] = useState(null); // Initialize an error state\n\n  useEffect(() => {\n    // Define a function to fetch activities\n    const fetchActivities = async () => {\n      try {\n        const response = await axios.get('/getActivities'); // Make API call to fetch activities\n        setActivities(response.data); // Update the state with the fetched activities\n        setLoading(false); // Set the loading state to false\n      } catch (error) {\n        console.error(error);\n        setError('Error fetching data'); // Set a generic error message\n        setLoading(false); // Set the loading state to false\n      }\n    };\n\n    // Call the fetchActivities function when the component mounts\n    fetchActivities();\n  }, []);\n\n  if (loading) {\n    return <div>Loading...</div>; // Display a loading message while the data is being fetched\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>; // Display an error message if the API call fails\n  }\n\n  return (\n    <div className='cards'>\n      <h1>Explorez nos activit√©s.</h1>\n      <div className='cards__container'>\n        <div className='cards__wrapper'>\n          <ul className='cards__items'>\n            {activities.map(activity => (\n              <CardItem\n                key={activity.id}\n                src={activity.imageLink} // Fix: use imageLink instead of image\n                text={activity.description}\n                label={activity.label}\n                date={activity.date}\n                startTime={activity.startTime}\n                endTime={activity.endTime}\n              />\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Cards;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}