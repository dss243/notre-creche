{"ast":null,"code":"const handleSubmit = async event => {\n  event.preventDefault();\n\n  // Validate form data here\n  const validationErrors = {};\n  if (!firstName) {\n    validationErrors.firstName = 'First name is required';\n  }\n  if (!lastName) {\n    validationErrors.lastName = 'Last name is required';\n  }\n  if (!email) {\n    validationErrors.email = 'Email is required';\n  }\n  if (!password) {\n    validationErrors.password = 'Password is required';\n  }\n  if (password !== confirmPassword) {\n    validationErrors.confirmPassword = 'Passwords do not match';\n  }\n  if (Object.keys(validationErrors).length > 0) {\n    setErrors(validationErrors);\n    return;\n  }\n\n  // If valid, send data to backend API\n  try {\n    const response = await fetch('http://localhost:8080/addExenfant', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        firstName,\n        lastName,\n        email,\n        password,\n        activity\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to add enfant');\n    }\n\n    // Handle successful response here\n    console.log('Enfant added successfully');\n  } catch (error) {\n    console.error(error);\n    setErrors({\n      general: 'Failed to add enfant'\n    });\n  }\n};","map":{"version":3,"names":["handleSubmit","event","preventDefault","validationErrors","firstName","lastName","email","password","confirmPassword","Object","keys","length","setErrors","response","fetch","method","headers","body","JSON","stringify","activity","ok","Error","console","log","error","general"],"sources":["C:/Users/Soundous/Desktop/react-website-v1-master/src/components/pages/SignupActivtie.js"],"sourcesContent":["const handleSubmit = async (event) => {\r\n  event.preventDefault();\r\n\r\n  // Validate form data here\r\n  const validationErrors = {};\r\n  if (!firstName) {\r\n    validationErrors.firstName = 'First name is required';\r\n  }\r\n  if (!lastName) {\r\n    validationErrors.lastName = 'Last name is required';\r\n  }\r\n  if (!email) {\r\n    validationErrors.email = 'Email is required';\r\n  }\r\n  if (!password) {\r\n    validationErrors.password = 'Password is required';\r\n  }\r\n  if (password !== confirmPassword) {\r\n    validationErrors.confirmPassword = 'Passwords do not match';\r\n  }\r\n  if (Object.keys(validationErrors).length > 0) {\r\n    setErrors(validationErrors);\r\n    return;\r\n  }\r\n\r\n  // If valid, send data to backend API\r\n  try {\r\n    const response = await fetch('http://localhost:8080/addExenfant', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        password,\r\n        activity\r\n      })\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to add enfant');\r\n    }\r\n\r\n    // Handle successful response here\r\n    console.log('Enfant added successfully');\r\n  } catch (error) {\r\n    console.error(error);\r\n    setErrors({ general: 'Failed to add enfant' });\r\n  }\r\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,KAAK,IAAK;EACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;;EAEtB;EACA,MAAMC,gBAAgB,GAAG,CAAC,CAAC;EAC3B,IAAI,CAACC,SAAS,EAAE;IACdD,gBAAgB,CAACC,SAAS,GAAG,wBAAwB;EACvD;EACA,IAAI,CAACC,QAAQ,EAAE;IACbF,gBAAgB,CAACE,QAAQ,GAAG,uBAAuB;EACrD;EACA,IAAI,CAACC,KAAK,EAAE;IACVH,gBAAgB,CAACG,KAAK,GAAG,mBAAmB;EAC9C;EACA,IAAI,CAACC,QAAQ,EAAE;IACbJ,gBAAgB,CAACI,QAAQ,GAAG,sBAAsB;EACpD;EACA,IAAIA,QAAQ,KAAKC,eAAe,EAAE;IAChCL,gBAAgB,CAACK,eAAe,GAAG,wBAAwB;EAC7D;EACA,IAAIC,MAAM,CAACC,IAAI,CAACP,gBAAgB,CAAC,CAACQ,MAAM,GAAG,CAAC,EAAE;IAC5CC,SAAS,CAACT,gBAAgB,CAAC;IAC3B;EACF;;EAEA;EACA,IAAI;IACF,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;MAChEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBf,SAAS;QACTC,QAAQ;QACRC,KAAK;QACLC,QAAQ;QACRa;MACF,CAAC;IACH,CAAC,CAAC;IAEF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;IACzC;;IAEA;IACAC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EAC1C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;IACpBb,SAAS,CAAC;MAAEc,OAAO,EAAE;IAAuB,CAAC,CAAC;EAChD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}